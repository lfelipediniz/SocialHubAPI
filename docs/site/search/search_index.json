{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SocialHubAPI Documentation","text":"<p>Welcome to the SocialHubAPI documentation. This project provides a complete social API with CRUD operations for posts and social interactions including likes, comments, and shares.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get up and running with SocialHubAPI:</p> <pre><code># activate virtual environment\nsource venv/bin/activate\n</code></pre> <pre><code># install dependencies\npip install -r requirements.txt\n</code></pre> <pre><code># run migrations\npython manage.py migrate\n</code></pre> <pre><code># start server\npython manage.py runserver 0.0.0.0:8000\n</code></pre>"},{"location":"#documentation-overview","title":"Documentation Overview","text":""},{"location":"#api-reference","title":"API Reference","text":"<ul> <li>Posts API - CRUD operations for posts and interactions</li> <li>Users API - User management, authentication, profiles</li> <li>Social Features - Likes, comments, shares, relationships</li> <li>Routes Overview - Complete endpoint list</li> </ul>"},{"location":"#authentication","title":"Authentication","text":"<ul> <li>Authentication System - Guide for JWT token usage</li> </ul>"},{"location":"#guides","title":"Guides","text":"<ul> <li>Quick Start Guide - Simple setup with examples</li> <li></li> </ul>"},{"location":"#configuration","title":"Configuration","text":""},{"location":"#jwt-authentication","title":"JWT Authentication","text":"<p>The API uses JWT tokens for secure authentication. Configure your secret key:</p> <pre><code>JWT_SECRET_KEY=your-jwt-secret-key-here\n</code></pre>"},{"location":"#base-urls","title":"Base URLs","text":"<ul> <li>Posts API: <code>http://localhost:8000/careers/</code></li> <li>Users API: <code>http://localhost:8000/users/</code></li> <li>API Docs: <code>http://localhost:8000/api/docs/</code></li> </ul>"},{"location":"#authentication_1","title":"Authentication","text":"<p>Use JWT tokens in all requests:</p> <pre><code>-H \"Authorization: Bearer &lt;jwt_token&gt;\"\n</code></pre>"},{"location":"#examples","title":"Examples","text":""},{"location":"#register-and-use-the-api","title":"Register and Use the API","text":"<pre><code># 1. Register user\ncurl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"alice\", \"email\": \"alice@example.com\", \"password\": \"password123\", \"password_confirm\": \"password123\"}'\n</code></pre> <pre><code># 2. Login and save token\nTOKEN=$(curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"alice\", \"password\": \"password123\"}' | jq -r '.access')\n</code></pre> <pre><code># 3. Use token for API calls\ncurl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\": \"Hello\", \"content\": \"World!\"}'\n</code></pre>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get up and running with SocialHubAPI in minutes.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12+</li> <li>PostgreSQL (recommended for production)</li> <li>Git</li> </ul>"},{"location":"quickstart/#installation","title":"Installation","text":""},{"location":"quickstart/#1-clone-repository","title":"1. Clone Repository","text":"<pre><code>git clone https://github.com/lfelipediniz/SocialHubAPI.git\ncd SocialHubAPI\n</code></pre>"},{"location":"quickstart/#2-create-virtual-environment","title":"2. Create Virtual Environment","text":"<pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre>"},{"location":"quickstart/#3-install-dependencies","title":"3. Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"quickstart/#4-configure-environment","title":"4. Configure Environment","text":"<pre><code>cp env.example .env\n</code></pre> <p>Edit <code>.env</code> file: <pre><code># Django Settings\nDJANGO_SECRET_KEY=your-secret-key-here\nDJANGO_DEBUG=True\nDJANGO_ALLOWED_HOSTS=localhost,127.0.0.1\n\n# Database (PostgreSQL for production)\nDATABASE_URL=postgresql://user:password@localhost:5432/socialhubapi\n\n# JWT Settings\nJWT_SECRET_KEY=your-jwt-secret-key-here\n\n# CORS Settings\nDJANGO_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000\n</code></pre></p>"},{"location":"quickstart/#5-run-migrations","title":"5. Run Migrations","text":"<pre><code>python manage.py migrate\n</code></pre>"},{"location":"quickstart/#6-start-server","title":"6. Start Server","text":"<pre><code>python manage.py runserver 0.0.0.0:8000\n</code></pre> <p>API available at <code>http://localhost:8000/</code></p>"},{"location":"quickstart/#quick-examples","title":"Quick Examples","text":""},{"location":"quickstart/#user-registration","title":"User Registration","text":"<pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"securepassword123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  }'\n</code></pre>"},{"location":"quickstart/#user-login","title":"User Login","text":"<pre><code>curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"password\": \"securepassword123\"\n  }'\n</code></pre>"},{"location":"quickstart/#create-post-with-token","title":"Create Post (with token)","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"My First Post\",\n    \"content\": \"Hello, SocialHubAPI!\"\n  }'\n</code></pre>"},{"location":"quickstart/#list-posts","title":"List Posts","text":"<pre><code>curl -X GET \"http://localhost:8000/careers/\"\n</code></pre>"},{"location":"quickstart/#like-a-post","title":"Like a Post","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"\n</code></pre>"},{"location":"quickstart/#add-a-comment","title":"Add a Comment","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"Great post!\"}'\n</code></pre>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ol> <li>Explore the API: Check out the API Reference for all available endpoints</li> <li>Authentication: Learn about JWT Authentication </li> </ol>"},{"location":"quickstart/#api-documentation","title":"API Documentation","text":"<ul> <li>Routes Reference - Quick reference of all endpoints</li> <li>Posts API - Complete CRUD operations for posts</li> <li>Users API - User management and authentication</li> <li>Social Features - Likes, comments, shares, and relationships</li> </ul>"},{"location":"api/posts/","title":"Posts API Documentation","text":""},{"location":"api/posts/#base-url","title":"Base URL","text":"<p>http://localhost:8000/careers/</p>"},{"location":"api/posts/#required-headers","title":"Required Headers","text":"<p>Authorization: Bearer  <p>Content-Type: application/json</p>"},{"location":"api/posts/#pagination-used-on-list-endpoints","title":"Pagination (used on list endpoints)","text":"<ul> <li> <p><code>batch_size</code>: default 10, max 100</p> </li> <li> <p><code>batch_number</code>: default 0</p> </li> </ul>"},{"location":"api/posts/#field-limits","title":"Field limits","text":"<ul> <li> <p>Post <code>title</code>: required, max 200 chars</p> </li> <li> <p>Post <code>content</code>: required, max 5000 chars</p> </li> <li> <p>Comment <code>content</code>: required, max 1000 chars</p> </li> </ul>"},{"location":"api/posts/#quick-model-shapes","title":"Quick model shapes","text":"<ul> <li> <p>Post:   <pre><code>{ \"id\": 1, \"username\": \"alice\", \"title\": \"Hello\", \"content\": \"Body\", \"created_datetime\": \"2024-01-15T10:30:00Z\", \"post_type\": \"post\", \"original_post\": null }\n</code></pre></p> </li> <li> <p>Like:   <pre><code>{ \"id\": 10, \"post\": 1, \"user\": 2, \"username\": \"alice\", \"created_datetime\": \"2024-01-15T10:30:00Z\" }\n</code></pre></p> </li> <li> <p>Comment:   <pre><code>{ \"id\": 7, \"post\": 1, \"user\": 2, \"username\": \"alice\", \"content\": \"Great post!\", \"created_datetime\": \"2024-01-15T10:30:00Z\" }\n</code></pre></p> </li> </ul>"},{"location":"api/posts/#core-flow-crud","title":"Core flow (CRUD)","text":""},{"location":"api/posts/#1-create-post","title":"1) Create post","text":"<p>POST <code>/careers/create/</code></p> <p>Body: <pre><code>{ \"username\": \"alice\", \"title\": \"My Post\", \"content\": \"This is the content\" }\n</code></pre></p> <p>Example: <pre><code>curl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"alice\",\"title\":\"My Post\",\"content\":\"This is the content\"}'\n</code></pre></p> <p>Response: <code>201 Created</code> (returns the created post)</p>"},{"location":"api/posts/#2-list-posts","title":"2) List posts","text":"<p>GET <code>/careers/</code></p> <p>Example: <pre><code>curl -X GET \"http://localhost:8000/careers/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre></p> <p>Response: <code>200 OK</code> with pagination wrapper</p>"},{"location":"api/posts/#3-retrieve-a-post","title":"3) Retrieve a post","text":"<p>GET <code>/careers/{id}/</code></p> <p>Example: <pre><code>curl -X GET \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre></p> <p>Response: <code>200 OK</code> with the post object</p>"},{"location":"api/posts/#4-update-a-post","title":"4) Update a post","text":"<p>PATCH <code>/careers/{id}/</code></p> <p>Body (one or both fields): <pre><code>{ \"title\": \"New title\", \"content\": \"New content\" }\n</code></pre></p> <p>Example: <pre><code>curl -X PATCH \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\":\"New title\",\"content\":\"New content\"}'\n</code></pre></p> <p>Response: <code>200 OK</code> with the updated post</p>"},{"location":"api/posts/#5-delete-a-post","title":"5) Delete a post","text":"<p>DELETE <code>/careers/{id}/</code></p> <p>Example:</p> <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>204 No Content</code></p>"},{"location":"api/posts/#social-features","title":"Social features","text":""},{"location":"api/posts/#likes","title":"Likes","text":"<ul> <li>Like a post: POST <code>/careers/{id}/like/</code></li> </ul> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>201 Created</code> with <code>{ \"message\": \"Post liked successfully\" }</code></p> <ul> <li>Unlike a post: DELETE <code>/careers/{id}/unlike/</code></li> </ul> <p>Example:</p> <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/unlike/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>204 No Content</code></p> <ul> <li>List likes: GET <code>/careers/{id}/likes/?batch_size=10&amp;batch_number=0</code></li> </ul> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>200 OK</code> with <code>likes</code> and <code>batch_info</code></p>"},{"location":"api/posts/#comments","title":"Comments","text":"<ul> <li>Add comment: POST <code>/careers/{id}/comment/</code></li> </ul> <p>Body:</p> <pre><code>{ \"content\": \"This is a comment\" }\n</code></pre> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\":\"This is a comment\"}'\n</code></pre> <p>Response: <code>201 Created</code> with the comment</p> <ul> <li>List comments: GET <code>/careers/{id}/comments/?batch_size=10&amp;batch_number=0</code></li> </ul> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>200 OK</code> with <code>comments</code> and <code>batch_info</code></p>"},{"location":"api/posts/#shares","title":"Shares","text":"<ul> <li>Share a post: POST <code>/careers/{id}/share/</code>   Example:</li> </ul> <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>201 Created</code> with <code>{ \"message\": \"Post shared successfully\" }</code></p> <ul> <li>List shares: GET <code>/careers/{id}/shares/?batch_size=10&amp;batch_number=0</code></li> </ul> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\"\n</code></pre> <p>Response: <code>200 OK</code> with <code>shares</code> and <code>batch_info</code></p> <ul> <li>Create a shared post with new content: POST <code>/careers/{id}/share-post/</code>   Body:</li> </ul> <pre><code>{ \"title\": \"Shared Post Title\", \"content\": \"My thoughts\" }\n</code></pre> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\":\"Shared Post Title\",\"content\":\"My thoughts\"}'\n</code></pre> <p>Response: <code>201 Created</code> with the new post (<code>post_type</code> is <code>\"share\"</code> and <code>original_post</code> present)</p>"},{"location":"api/routes/","title":"API Routes Reference","text":""},{"location":"api/routes/#authentication-header","title":"Authentication Header","text":"<p>Authorization: Bearer"},{"location":"api/routes/#standard-response-format","title":"Standard Response Format","text":"<pre><code>{\n  \"message\": \"Success message\",\n  \"data\": [...],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_items\": 25,\n    \"total_batches\": 3,\n    \"items_in_current_batch\": 10\n  }\n}\n</code></pre>"},{"location":"api/routes/#pagination-and-filtering","title":"Pagination and Filtering","text":""},{"location":"api/routes/#pagination-batch-system","title":"Pagination (Batch System)","text":"<ul> <li> <p><code>batch_size</code> \u2013 Number of items per page</p> </li> <li> <p><code>batch_number</code> \u2013 Starts at 0</p> </li> </ul>"},{"location":"api/routes/#search-filtering","title":"Search &amp; Filtering","text":"<ul> <li> <p><code>search</code> \u2013 General search term</p> </li> <li> <p><code>q</code> \u2013 Alias for search</p> </li> <li> <p><code>first_name</code> \u2013 Filter by first name</p> </li> <li> <p><code>last_name</code> \u2013 Filter by last name</p> </li> <li> <p><code>ordering</code> \u2013 Sort results</p> </li> <li> <p><code>limit</code> \u2013 Limit number of results</p> </li> </ul>"},{"location":"api/routes/#posts-api","title":"Posts API","text":""},{"location":"api/routes/#posts-management","title":"Posts Management","text":"<ul> <li> <p><code>GET /careers/</code> \u2013 List all posts</p> </li> <li> <p><code>POST /careers/create/</code> \u2013 Create new post</p> </li> <li> <p><code>GET /careers/{id}/</code> \u2013 Get specific post</p> </li> <li> <p><code>PATCH /careers/{id}/</code> \u2013 Update post</p> </li> <li> <p><code>DELETE /careers/{id}/</code> \u2013 Delete post</p> </li> </ul>"},{"location":"api/routes/#social-interactions","title":"Social Interactions","text":"<ul> <li> <p><code>POST /careers/{id}/like/</code> \u2013 Like a post</p> </li> <li> <p><code>DELETE /careers/{id}/unlike/</code> \u2013 Unlike a post</p> </li> <li> <p><code>GET /careers/{id}/likes/</code> \u2013 List likes</p> </li> <li> <p><code>POST /careers/{id}/comment/</code> \u2013 Add comment</p> </li> <li> <p><code>GET /careers/{id}/comments/</code> \u2013 List comments</p> </li> <li> <p><code>POST /careers/{id}/share/</code> \u2013 Share a post</p> </li> <li> <p><code>GET /careers/{id}/shares/</code> \u2013 List shares</p> </li> </ul>"},{"location":"api/routes/#users-api","title":"Users API","text":""},{"location":"api/routes/#authentication","title":"Authentication","text":"<ul> <li> <p><code>POST /careers/users/register/</code> \u2013 Register new user</p> </li> <li> <p><code>POST /careers/users/login/</code> \u2013 Login</p> </li> <li> <p><code>POST /careers/users/logout/</code> \u2013 Logout</p> </li> <li> <p><code>POST /careers/users/token/refresh/</code> \u2013 Refresh token</p> </li> </ul>"},{"location":"api/routes/#user-management","title":"User Management","text":"<ul> <li> <p><code>GET /careers/users/</code> \u2013 List all users</p> </li> <li> <p><code>GET /careers/users/me/</code> \u2013 Get current user profile</p> </li> <li> <p><code>PATCH /careers/users/me/update/</code> \u2013 Update current user</p> </li> <li> <p><code>GET /careers/users/me/stats/</code> \u2013 Get user statistics</p> </li> <li> <p><code>GET /careers/users/{username}/</code> \u2013 Get profile by username</p> </li> </ul>"},{"location":"api/routes/#social-features","title":"Social Features","text":"<ul> <li> <p><code>POST /careers/users/follow/</code> \u2013 Follow a user</p> </li> <li> <p><code>GET /careers/users/following/</code> \u2013 List following users</p> </li> <li> <p><code>GET /careers/users/followers/</code> \u2013 List my followers</p> </li> <li> <p><code>GET /careers/users/{username}/followers/</code> \u2013 List user's followers</p> </li> <li> <p><code>GET /careers/users/{username}/following/</code> \u2013 List who user follows</p> </li> <li> <p><code>DELETE /careers/users/{username}/unfollow/</code> \u2013 Unfollow user</p> </li> </ul>"},{"location":"api/routes/#errors","title":"Errors","text":""},{"location":"api/routes/#status-codes","title":"Status codes","text":"<ul> <li> <p>200 OK</p> </li> <li> <p>201 Created</p> </li> <li> <p>204 No Content</p> </li> <li> <p>400 Bad Request</p> </li> <li> <p>401 Unauthorized</p> </li> <li> <p>403 Forbidden</p> </li> <li> <p>404 Not Found</p> </li> <li> <p>409 Conflict</p> </li> </ul>"},{"location":"api/routes/#error-format","title":"Error format","text":"<pre><code>{ \"error\": \"Error message\", \"details\": \"Additional error details\" }\n</code></pre>"},{"location":"api/social/","title":"Social Features API","text":""},{"location":"api/social/#base-urls","title":"Base URLs","text":"<p>Posts: http://localhost:8000/careers/</p> <p>User: http://localhost:8000/careers/users/</p>"},{"location":"api/social/#required-headers","title":"Required headers","text":"<p>Authorization: Bearer  <p>Content-Type: application/json</p>"},{"location":"api/social/#pagination-batch-system","title":"Pagination (batch system)","text":"<ul> <li> <p>batch_size: default 10, max 100</p> </li> <li> <p>batch_number: starts at 0</p> </li> </ul>"},{"location":"api/social/#post-interactions","title":"Post interactions","text":""},{"location":"api/social/#likes","title":"Likes","text":""},{"location":"api/social/#like-a-post","title":"Like a post","text":"<p>POST /careers/{id}/like/</p> <p>Example: <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response 201:</p> <pre><code>{ \"message\": \"Post liked successfully\" }\n</code></pre>"},{"location":"api/social/#unlike-a-post","title":"Unlike a post","text":"<p>DELETE /careers/{id}/unlike/</p> <p>Example:</p> <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/unlike/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 204: empty body</p>"},{"location":"api/social/#list-likes","title":"List likes","text":"<p>GET /careers/{id}/likes/?batch_size=10&amp;batch_number=0</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"message\": \"Likes retrieved successfully\",\n  \"likes\": [\n    { \"id\": 1, \"user\": \"alice\", \"created_at\": \"2024-01-15T10:30:00Z\" }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_likes\": 25,\n    \"total_batches\": 3,\n    \"likes_in_current_batch\": 10\n  }\n}\n</code></pre>"},{"location":"api/social/#comments","title":"Comments","text":""},{"location":"api/social/#add-comment","title":"Add comment","text":"<p>POST /careers/{id}/comment/</p> <p>Body:</p> <pre><code>{ \"content\": \"This is a great post!\" }\n</code></pre> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\":\"This is a great post!\"}'\n</code></pre> <p>Response 201:</p> <pre><code>{\n  \"id\": 1,\n  \"user\": \"alice\",\n  \"content\": \"This is a great post!\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre>"},{"location":"api/social/#list-comments","title":"List comments","text":"<p>GET /careers/{id}/comments/?batch_size=10&amp;batch_number=0</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"message\": \"Comments retrieved successfully\",\n  \"comments\": [\n    { \"id\": 1, \"user\": \"alice\", \"content\": \"This is a great post!\", \"created_at\": \"2024-01-15T10:30:00Z\" }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_comments\": 15,\n    \"total_batches\": 2,\n    \"comments_in_current_batch\": 10\n  }\n}\n</code></pre>"},{"location":"api/social/#shares","title":"Shares","text":""},{"location":"api/social/#share-a-post","title":"Share a post","text":"<p>POST /careers/{id}/share/</p> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 201:</p> <pre><code>{ \"message\": \"Post shared successfully\" }\n</code></pre>"},{"location":"api/social/#list-shares","title":"List shares","text":"<p>GET /careers/{id}/shares/?batch_size=10&amp;batch_number=0</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"message\": \"Shares retrieved successfully\",\n  \"shares\": [\n    { \"id\": 1, \"user\": \"alice\", \"created_at\": \"2024-01-15T10:30:00Z\" }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_shares\": 8,\n    \"total_batches\": 1,\n    \"shares_in_current_batch\": 8\n  }\n}\n</code></pre>"},{"location":"api/social/#create-shared-post","title":"Create shared post","text":"<p>POST /careers/{id}/share-post/</p> <p>Body:</p> <pre><code>{ \"title\": \"My thoughts on this post\", \"content\": \"I found this post really interesting because...\" }\n</code></pre> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\":\"My thoughts on this post\",\"content\":\"I found this post really interesting because...\"}'\n</code></pre> <p>Response 201:</p> <pre><code>{\n  \"id\": 2,\n  \"username\": \"alice\",\n  \"title\": \"My thoughts on this post\",\n  \"content\": \"I found this post really interesting because...\",\n  \"created_datetime\": \"2024-01-15T10:30:00Z\",\n  \"original_post\": 1,\n  \"post_type\": \"share\"\n}\n</code></pre>"},{"location":"api/social/#user-relationships","title":"User relationships","text":""},{"location":"api/social/#follow-user","title":"Follow user","text":"<p>POST /careers/users/follow/</p> <p>Body:</p> <pre><code>{ \"following\": 2 }\n</code></pre> <p>Example:</p> <pre><code>curl -X POST \"http://localhost:8000/careers/users/follow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"following\": 2}'\n</code></pre> <p>Response 201:</p> <pre><code>{\n  \"id\": 1,\n  \"follower\": 1,\n  \"following\": 2,\n  \"follower_username\": \"alice\",\n  \"following_username\": \"bob\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre>"},{"location":"api/social/#unfollow-user","title":"Unfollow user","text":"<p>DELETE /careers/users/{username}/unfollow/</p> <p>Example:</p> <pre><code>curl -X DELETE \"http://localhost:8000/careers/users/bob/unfollow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{ \"message\": \"Stopped following bob\" }\n</code></pre>"},{"location":"api/social/#get-my-following","title":"Get my following","text":"<p>GET /careers/users/following/</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/users/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"count\": 5,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"follower\": 1,\n      \"following\": 2,\n      \"follower_username\": \"alice\",\n      \"following_username\": \"bob\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/social/#get-a-users-followers","title":"Get a user's followers","text":"<p>GET /careers/users/{username}/followers/</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/users/alice/followers/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"count\": 10,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"charlie\",\n      \"first_name\": \"Charlie\",\n      \"last_name\": \"Brown\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ]\n}\n</code></pre>"},{"location":"api/social/#get-a-users-following","title":"Get a user's following","text":"<p>GET /careers/users/{username}/following/</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/users/alice/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"count\": 8,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"david\",\n      \"first_name\": \"David\",\n      \"last_name\": \"Wilson\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"api/social/#feed","title":"Feed","text":""},{"location":"api/social/#personalized-feed","title":"Personalized feed","text":"<p>GET /careers/users/me/feed/?batch_size=20&amp;batch_number=0</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/users/me/feed/?batch_size=20&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"message\": \"Feed retrieved successfully\",\n  \"posts\": [\n    { \"id\": 1, \"username\": \"bob\", \"title\": \"New Post from Bob\", \"content\": \"Post body\", \"created_datetime\": \"2024-01-15T10:30:00Z\" },\n    { \"id\": 2, \"username\": \"alice\", \"title\": \"My Own Post\", \"content\": \"Post body\", \"created_datetime\": \"2024-01-15T09:30:00Z\" }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 20,\n    \"total_posts\": 50,\n    \"total_batches\": 3,\n    \"posts_in_current_batch\": 20\n  }\n}\n</code></pre>"},{"location":"api/social/#user-statistics","title":"User statistics","text":""},{"location":"api/social/#get-my-stats","title":"Get my stats","text":"<p>GET /careers/users/me/stats/</p> <p>Example:</p> <pre><code>curl -X GET \"http://localhost:8000/careers/users/me/stats/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28,\n  \"likes_received\": 156,\n  \"comments_received\": 89\n}\n</code></pre>"},{"location":"api/users/","title":"Users API Documentation","text":""},{"location":"api/users/#base-url","title":"Base URL","text":"<p>http://localhost:8000/careers/users/</p>"},{"location":"api/users/#authentication-mode-jwt","title":"Authentication mode (JWT)","text":"<ul> <li> <p>Use header: Authorization: Bearer  <li> <p>Access token expiry: 60 minutes</p> </li> <li> <p>Refresh token expiry: 7 days</p> </li>"},{"location":"api/users/#common-headers","title":"Common headers","text":"<ul> <li>Content-Type: application/json</li> </ul>"},{"location":"api/users/#authentication-endpoints","title":"Authentication endpoints","text":""},{"location":"api/users/#register-user","title":"Register user","text":"<p>POST /careers/users/register/</p> <p>Body: <pre><code>{\n  \"username\": \"alice\",\n  \"email\": \"alice@example.com\",\n  \"password\": \"password123\",\n  \"password_confirm\": \"password123\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"bio\": \"Software developer passionate about APIs\"\n}\n````\n\nResponse 201:\n\n```json\n{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"bio\": \"Software developer passionate about APIs\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"ACCESS_TOKEN\",\n  \"refresh\": \"REFRESH_TOKEN\"\n}\n</code></pre></p>"},{"location":"api/users/#login","title":"Login","text":"<p>POST /careers/users/login/</p> <p>Body:</p> <pre><code>{ \"username\": \"alice\", \"password\": \"password123\" }\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"user\": { \"id\": 1, \"username\": \"alice\", \"email\": \"alice@example.com\", \"first_name\": \"Alice\", \"last_name\": \"Smith\" },\n  \"access\": \"ACCESS_TOKEN\",\n  \"refresh\": \"REFRESH_TOKEN\"\n}\n</code></pre>"},{"location":"api/users/#refresh-token","title":"Refresh token","text":"<p>POST /careers/users/token/refresh/</p> <p>Body:</p> <pre><code>{ \"refresh\": \"REFRESH_TOKEN\" }\n</code></pre> <p>Response 200:</p> <pre><code>{ \"access\": \"NEW_ACCESS_TOKEN\" }\n</code></pre>"},{"location":"api/users/#logout","title":"Logout","text":"<p>POST /careers/users/logout/</p> <p>Headers: Authorization: Bearer  <p>Body:</p> <pre><code>{ \"refresh\": \"REFRESH_TOKEN\" }\n</code></pre> <p>Response 200:</p> <pre><code>{ \"message\": \"Successfully logged out\" }\n</code></pre>"},{"location":"api/users/#user-management","title":"User management","text":""},{"location":"api/users/#list-users","title":"List users","text":"<p>GET /careers/users/?search=&amp;batch_size=10&amp;batch_number=0 <p>Notes:</p> <ul> <li> <p>search: matches username, first_name, last_name, bio</p> </li> <li> <p>first_name: contains filter</p> </li> <li> <p>last_name: contains filter</p> </li> <li> <p>ordering: username or created_at or first_name or last_name</p> </li> <li> <p>batch_size: default 10, max 100</p> </li> <li> <p>batch_number: starts at 0</p> </li> </ul> <p>Response 200:</p> <pre><code>{\n  \"message\": \"Users retrieved successfully\",\n  \"users\": [\n    {\n      \"id\": 1,\n      \"username\": \"alice\",\n      \"first_name\": \"Alice\",\n      \"last_name\": \"Smith\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_users\": 25,\n    \"total_batches\": 3,\n    \"users_in_current_batch\": 10\n  }\n}\n</code></pre>"},{"location":"api/users/#get-user-profile","title":"Get user profile","text":"<p>GET /careers/users/{username}/</p> <p>Response 200:</p> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"bio\": \"Software developer passionate about APIs\",\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28\n}\n</code></pre>"},{"location":"api/users/#get-my-profile","title":"Get my profile","text":"<p>GET /careers/users/me/</p> <p>Response 200:</p> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"email\": \"alice@example.com\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"bio\": \"Software developer passionate about APIs\",\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"updated_at\": \"2024-01-15T10:30:00Z\",\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28\n}\n</code></pre>"},{"location":"api/users/#update-my-profile","title":"Update my profile","text":"<p>PATCH /careers/users/me/update/</p> <p>Body (any subset):</p> <pre><code>{\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Johnson\",\n  \"bio\": \"Updated bio\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\",\n  \"email\": \"alice.johnson@example.com\"\n}\n</code></pre> <p>Response 200:</p> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"email\": \"alice.johnson@example.com\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Johnson\",\n  \"bio\": \"Updated bio\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\",\n  \"updated_at\": \"2024-01-15T11:30:00Z\"\n}\n</code></pre>"},{"location":"api/users/#social-features","title":"Social features","text":""},{"location":"api/users/#follow-user","title":"Follow user","text":"<p>POST /careers/users/follow/</p> <p>Headers: Authorization: Bearer  <p>Body:</p> <pre><code>{ \"following\": 2 }\n</code></pre> <p>Response 201:</p> <pre><code>{\n  \"id\": 1,\n  \"follower\": 1,\n  \"following\": 2,\n  \"follower_username\": \"alice\",\n  \"following_username\": \"bob\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre>"},{"location":"api/users/#unfollow-user","title":"Unfollow user","text":"<p>DELETE /careers/users/{username}/unfollow/</p> <p>Response 200:</p> <pre><code>{ \"message\": \"Stopped following bob\" }\n</code></pre>"},{"location":"api/users/#get-my-following","title":"Get my following","text":"<p>GET /careers/users/following/</p> <p>Response 200:</p> <pre><code>{\n  \"count\": 5,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"follower\": 1,\n      \"following\": 2,\n      \"follower_username\": \"alice\",\n      \"following_username\": \"bob\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/users/#get-a-users-followers","title":"Get a user's followers","text":"<p>GET /careers/users/{username}/followers/</p> <p>Response 200:</p> <pre><code>{\n  \"count\": 10,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"charlie\",\n      \"first_name\": \"Charlie\",\n      \"last_name\": \"Brown\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ]\n}\n</code></pre>"},{"location":"api/users/#get-a-users-following","title":"Get a user's following","text":"<p>GET /careers/users/{username}/following/</p> <p>Response 200:</p> <pre><code>{\n  \"count\": 8,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"david\",\n      \"first_name\": \"David\",\n      \"last_name\": \"Wilson\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"api/users/#user-statistics-and-feed-pointers","title":"User statistics and feed pointers","text":""},{"location":"api/users/#get-my-statistics","title":"Get my statistics","text":"<p>GET /careers/users/me/stats/</p> <p>Response 200:</p> <pre><code>{\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28,\n  \"likes_received\": 156,\n  \"comments_received\": 89\n}\n</code></pre>"},{"location":"api/users/#feed-pointers","title":"Feed pointers","text":"<ul> <li> <p>Use /users and /careers endpoints described in the Social Features and Posts docs to assemble a personalized feed in the client</p> </li> <li> <p>Typical pattern: fetch /users/me/following and then query posts for those usernames</p> </li> </ul>"},{"location":"auth/","title":"Authentication System Documentation","text":""},{"location":"auth/#overview","title":"Overview","text":"<p>The SocialHub API uses JWT (JSON Web Token) authentication for secure access to all endpoints.</p>"},{"location":"auth/#authentication-system","title":"Authentication System","text":""},{"location":"auth/#jwt-authentication","title":"JWT Authentication","text":"<ul> <li>Purpose: Secure token-based authentication</li> <li>Method: JWT (JSON Web Token) authentication</li> <li>Header: <code>Authorization: Bearer &lt;access_token&gt;</code></li> <li>Token Lifetime: Access tokens expire after 60 minutes</li> <li>Refresh Tokens: Available for 7 days</li> </ul>"},{"location":"auth/#configuration","title":"Configuration","text":""},{"location":"auth/#environment-variables","title":"Environment Variables","text":"<p>Configure JWT settings using environment variables:</p> <pre><code># JWT Settings\nJWT_SECRET_KEY=your-jwt-secret-key-here\n</code></pre>"},{"location":"auth/#settings-configuration","title":"Settings Configuration","text":"<p>JWT configuration is set in <code>settings.py</code>:</p> <pre><code># JWT Configuration\nfrom datetime import timedelta\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': config('JWT_SECRET_KEY', default=SECRET_KEY),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n}\n</code></pre>"},{"location":"auth/#authentication-workflow","title":"Authentication Workflow","text":""},{"location":"auth/#1-user-registration","title":"1. User Registration","text":"<pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"securepassword123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n  \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#2-user-login","title":"2. User Login","text":"<pre><code>curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"password\": \"securepassword123\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n  \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#3-using-access-tokens","title":"3. Using Access Tokens","text":"<p>Include the access token in the Authorization header for protected endpoints:</p> <pre><code>curl -X GET \"http://localhost:8000/users/me/\" \\\n  -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n</code></pre>"},{"location":"auth/#4-token-refresh","title":"4. Token Refresh","text":"<p>When the access token expires, use the refresh token to get a new one:</p> <pre><code>curl -X POST \"http://localhost:8000/users/token/refresh/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#5-user-logout","title":"5. User Logout","text":"<p>To logout, blacklist the refresh token:</p> <pre><code>curl -X POST \"http://localhost:8000/users/logout/\" \\\n  -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"message\": \"successfully logged out\"\n}\n</code></pre></p>"},{"location":"auth/#protected-endpoints","title":"Protected Endpoints","text":"<p>All endpoints except the following require authentication: - <code>POST /users/register/</code> - User registration - <code>POST /users/login/</code> - User login - <code>POST /users/token/refresh/</code> - Token refresh</p>"},{"location":"auth/#error-responses","title":"Error Responses","text":""},{"location":"auth/#401-unauthorized","title":"401 Unauthorized","text":"<pre><code>{\n  \"detail\": \"Authentication credentials were not provided.\"\n}\n</code></pre>"},{"location":"auth/#403-forbidden","title":"403 Forbidden","text":"<pre><code>{\n  \"message\": \"Access denied - You can only edit your own posts\"\n}\n</code></pre>"},{"location":"auth/#invalid-token","title":"Invalid Token","text":"<pre><code>{\n  \"detail\": \"Given token not valid for any token type\"\n}\n</code></pre>"},{"location":"auth/#security-features","title":"Security Features","text":"<ul> <li>Token Rotation: Refresh tokens are rotated on each use</li> <li>Token Blacklisting: Logged out tokens are blacklisted</li> <li>Secure Headers: Tokens must be sent in Authorization header</li> <li>HTTPS Recommended: Use HTTPS in production for secure token transmission</li> </ul>"}]}