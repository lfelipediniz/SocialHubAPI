{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SocialHubAPI Documentation","text":"<p>Welcome to the SocialHubAPI documentation! This is a complete social API with CRUD operations for posts and social interactions including likes, comments, and shares.</p>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>Get up and running with SocialHubAPI in minutes:</p> <pre><code># Activate virtual environment\nsource venv/bin/activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Run migrations\npython manage.py migrate\n\n# Start server\npython manage.py runserver 0.0.0.0:8000\n</code></pre>"},{"location":"#documentation-overview","title":"\ud83d\udcda Documentation Overview","text":""},{"location":"#api-reference","title":"API Reference","text":"<ul> <li>Posts API - Complete CRUD operations for posts and social interactions</li> <li>Users API - User management, authentication, and profile features</li> <li>Social Features - Likes, comments, shares, and user relationships</li> </ul>"},{"location":"#authentication","title":"Authentication","text":"<ul> <li>Authentication System - Complete authentication guide with JWT tokens</li> </ul>"},{"location":"#guides","title":"Guides","text":"<ul> <li>Quick Start Guide - Get started quickly with examples</li> <li>Development Guide - Development setup and best practices</li> </ul>"},{"location":"#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"#jwt-authentication","title":"JWT Authentication","text":"<p>The API uses JWT tokens for secure authentication. Configure your JWT secret: <pre><code>JWT_SECRET_KEY=your-jwt-secret-key-here\n</code></pre></p>"},{"location":"#base-urls","title":"\ud83d\udccb Base URLs","text":"<ul> <li>Posts API: <code>http://localhost:8000/careers/</code></li> <li>Users API: <code>http://localhost:8000/users/</code></li> <li>API Documentation: <code>http://localhost:8000/api/docs/</code></li> </ul>"},{"location":"#authentication_1","title":"\ud83d\udd10 Authentication","text":""},{"location":"#jwt-authentication_1","title":"JWT Authentication","text":"<pre><code># All APIs\n-H \"Authorization: Bearer &lt;jwt_token&gt;\"\n</code></pre>"},{"location":"#quick-examples","title":"\ud83d\ude80 Quick Examples","text":""},{"location":"#complete-platform-usage","title":"Complete Platform Usage","text":"<pre><code># 1. Register user\ncurl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"alice\", \"email\": \"alice@example.com\", \"password\": \"password123\", \"password_confirm\": \"password123\"}'\n\n# 2. Login and save token\nTOKEN=$(curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"alice\", \"password\": \"password123\"}' | jq -r '.access')\n\n# 3. Use token for API calls\ncurl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\": \"Hello\", \"content\": \"World!\"}'\n</code></pre>"},{"location":"#api-features-overview","title":"\ud83d\udd17 API Features Overview","text":""},{"location":"#posts-api","title":"Posts API","text":"<ul> <li>Complete CRUD operations for posts</li> <li>Social interactions (likes, comments, shares)</li> <li>Pagination and filtering</li> <li>CodeLeap careers API compatibility</li> </ul>"},{"location":"#users-api","title":"Users API","text":"<ul> <li>User registration and authentication</li> <li>Profile management</li> <li>JWT token-based security</li> <li>Social features (following/followers)</li> </ul>"},{"location":"#user-search","title":"User Search","text":"<ul> <li>Advanced search and filtering</li> <li>Search statistics</li> <li>Multiple filter options</li> </ul>"},{"location":"#social-features","title":"Social Features","text":"<ul> <li>Like/unlike posts</li> <li>Comment system</li> <li>Share functionality</li> <li>User relationships</li> <li>Personalized feeds</li> </ul>"},{"location":"#status-codes","title":"\ud83d\udcca Status Codes","text":"<ul> <li>200 OK - Successful operation</li> <li>201 Created - Resource created</li> <li>204 No Content - Successful operation with no content</li> <li>400 Bad Request - Invalid request data</li> <li>401 Unauthorized - Authentication required</li> <li>403 Forbidden - Insufficient permissions</li> <li>404 Not Found - Resource not found</li> <li>409 Conflict - Resource already exists</li> </ul>"},{"location":"#project-structure","title":"\ud83d\udcc1 Project Structure","text":"<pre><code>socialhubapi/\n\u251c\u2500\u2500 posts/              # Posts API and social interactions\n\u251c\u2500\u2500 users/              # Users API and authentication\n\u251c\u2500\u2500 socialhubapi/       # Django settings and configuration\n\u251c\u2500\u2500 requirements.txt    # Python dependencies\n\u2514\u2500\u2500 .env               # Environment variables\n</code></pre>"},{"location":"development/","title":"Development Guide","text":"<p>This guide covers development setup and configuration for the SocialHubAPI project.</p>"},{"location":"development/#development-setup","title":"Development Setup","text":""},{"location":"development/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12+</li> <li>pip and virtualenv</li> <li>Git</li> <li>PostgreSQL (for production)</li> </ul>"},{"location":"development/#environment-setup","title":"Environment Setup","text":""},{"location":"development/#1-clone-and-setup","title":"1. Clone and Setup","text":"<pre><code>git clone https://github.com/lfelipediniz/SocialHubAPI\ncd socialhubapi\npython -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# or venv\\Scripts\\activate  # Windows\n</code></pre>"},{"location":"development/#2-install-dependencies","title":"2. Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"development/#3-environment-configuration","title":"3. Environment Configuration","text":"<pre><code># Copy environment template\ncp env.example .env\n\n# Edit .env with your development settings\n</code></pre>"},{"location":"development/#4-database-setup","title":"4. Database Setup","text":"<pre><code># Run migrations\npython manage.py migrate\n\n# Create superuser (optional)\npython manage.py createsuperuser\n</code></pre>"},{"location":"development/#5-start-development-server","title":"5. Start Development Server","text":"<pre><code>python manage.py runserver 0.0.0.0:8000\n</code></pre>"},{"location":"development/#project-structure","title":"Project Structure","text":"<pre><code>socialhubapi/\n\u251c\u2500\u2500 posts/                    # Posts app\n\u2502   \u251c\u2500\u2500 models.py            # Post, Like, Comment, Share models\n\u2502   \u251c\u2500\u2500 views.py             # API views\n\u2502   \u251c\u2500\u2500 serializers.py       # Data serializers\n\u2502   \u251c\u2500\u2500 urls.py              # URL routing\n\u2502   \u251c\u2500\u2500 permissions.py       # Custom permissions\n\u2502   \u2514\u2500\u2500 tests.py             # Unit tests\n\u251c\u2500\u2500 users/                    # Users app\n\u2502   \u251c\u2500\u2500 models.py            # User, Follow models\n\u2502   \u251c\u2500\u2500 views.py             # User management views\n\u2502   \u251c\u2500\u2500 serializers.py       # User serializers\n\u2502   \u251c\u2500\u2500 authentication.py    # Custom authentication\n\u2502   \u2514\u2500\u2500 tests.py             # User tests\n\u251c\u2500\u2500 socialhubapi/            # Django project settings\n\u2502   \u251c\u2500\u2500 settings.py          # Main settings\n\u2502   \u251c\u2500\u2500 urls.py              # Root URL configuration\n\u2502   \u2514\u2500\u2500 wsgi.py              # WSGI configuration\n\u251c\u2500\u2500 docs/                    # Documentation\n\u2502   \u251c\u2500\u2500 docs/                # MkDocs content\n\u2502   \u2514\u2500\u2500 mkdocs.yml           # MkDocs configuration\n\u2514\u2500\u2500 requirements.txt         # Python dependencies\n</code></pre>"},{"location":"development/#configuration","title":"Configuration","text":""},{"location":"development/#environment-variables","title":"Environment Variables","text":""},{"location":"development/#required-variables","title":"Required Variables","text":"<pre><code># Django Settings\nDJANGO_SECRET_KEY=your-secret-key-here\nDJANGO_DEBUG=True\nDJANGO_ALLOWED_HOSTS=localhost,127.0.0.1\n\n# Database\nDATABASE_URL=sqlite:///db.sqlite3  # Development\n# DATABASE_URL=postgresql://user:pass@localhost/db  # Production\n\n# Authentication\nJWT_SECRET_KEY=your-jwt-secret-key-here\n\n# CORS\nDJANGO_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000\n</code></pre>"},{"location":"development/#optional-variables","title":"Optional Variables","text":"<pre><code># JWT Settings (Production only)\nJWT_SECRET_KEY=your-jwt-secret-key\n\n# Email Settings\nEMAIL_HOST=smtp.gmail.com\nEMAIL_PORT=587\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER=your-email@gmail.com\nEMAIL_HOST_PASSWORD=your-app-password\n</code></pre>"},{"location":"development/#settings-configuration","title":"Settings Configuration","text":"<p>The project uses <code>python-decouple</code> for environment variable management:</p> <pre><code># socialhubapi/settings.py\nfrom decouple import config\n\n# Basic Django settings\nSECRET_KEY = config('DJANGO_SECRET_KEY', default='django-insecure-...')\nDEBUG = config('DJANGO_DEBUG', default=True, cast=bool)\nALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='localhost,127.0.0.1').split(',')\n\n# Authentication mode\n# JWT configuration is automatically loaded from environment\n</code></pre>"},{"location":"development/#database-management","title":"Database Management","text":""},{"location":"development/#development-database","title":"Development Database","text":"<pre><code># SQLite (default for development)\nDATABASE_URL=sqlite:///db.sqlite3\n</code></pre>"},{"location":"development/#production-database","title":"Production Database","text":"<pre><code># PostgreSQL\nDATABASE_URL=postgresql://user:password@localhost:5432/socialhubapi\n</code></pre>"},{"location":"development/#database-operations","title":"Database Operations","text":"<pre><code># Reset database\nrm db.sqlite3\npython manage.py migrate\n\n# Create superuser\npython manage.py createsuperuser\n\n# Dump data\npython manage.py dumpdata &gt; fixtures/backup.json\n\n# Load data\npython manage.py loaddata fixtures/backup.json\n</code></pre>"},{"location":"development/#documentation","title":"Documentation","text":""},{"location":"development/#mkdocs-setup","title":"MkDocs Setup","text":"<pre><code># Install MkDocs\npip install mkdocs mkdocs-material\n\n# Serve documentation locally\ncd docs\nmkdocs serve\n\n# Build documentation\nmkdocs build\n</code></pre>"},{"location":"development/#adding-documentation","title":"Adding Documentation","text":"<ol> <li>Create new <code>.md</code> file in <code>docs/docs/</code></li> <li>Add to navigation in <code>mkdocs.yml</code></li> <li>Update cross-references</li> <li>Test with <code>mkdocs serve</code></li> </ol>"},{"location":"development/#deployment","title":"Deployment","text":""},{"location":"development/#production-checklist","title":"Production Checklist","text":""},{"location":"development/#security","title":"Security","text":"<ul> <li>[ ] Set <code>DEBUG=False</code></li> <li>[ ] Use strong <code>SECRET_KEY</code></li> <li>[ ] Configure <code>ALLOWED_HOSTS</code></li> <li>[ ] Use HTTPS</li> <li>[ ] Set secure CORS origins</li> <li>[ ] Use production database</li> </ul>"},{"location":"development/#performance","title":"Performance","text":"<ul> <li>[ ] Enable database connection pooling</li> <li>[ ] Configure caching (Redis)</li> <li>[ ] Use CDN for static files</li> <li>[ ] Enable gzip compression</li> <li>[ ] Set up monitoring</li> </ul>"},{"location":"development/#environment","title":"Environment","text":"<pre><code># Production environment variables\nDJANGO_DEBUG=False\nDJANGO_SECRET_KEY=your-production-secret-key\nDJANGO_ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com\nDATABASE_URL=postgresql://user:pass@localhost/socialhubapi\nAUTHENTICATION_REQUIRED=True\n</code></pre>"},{"location":"development/#github-pages-deployment","title":"GitHub Pages Deployment","text":""},{"location":"development/#setup-github-pages","title":"Setup GitHub Pages","text":"<pre><code># Install gh-pages plugin\npip install mkdocs-gh-deploy\n\n# Deploy to GitHub Pages\nmkdocs gh-deploy\n</code></pre>"},{"location":"development/#configuration_1","title":"Configuration","text":"<p>The documentation is automatically deployed to GitHub Pages when you push to the main branch.</p>"},{"location":"development/#common-issues","title":"Common Issues","text":""},{"location":"development/#import-errors","title":"Import Errors","text":"<pre><code># Make sure virtual environment is activated\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"development/#database-issues","title":"Database Issues","text":"<pre><code># Reset migrations\nrm posts/migrations/0*.py\nrm users/migrations/0*.py\npython manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"development/#permission-errors","title":"Permission Errors","text":"<pre><code># Check file permissions\nchmod +x manage.py\nchmod -R 755 .\n</code></pre>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get up and running with SocialHubAPI in minutes.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12+</li> <li>PostgreSQL (recommended for production)</li> <li>Git</li> </ul>"},{"location":"quickstart/#installation","title":"Installation","text":""},{"location":"quickstart/#1-clone-repository","title":"1. Clone Repository","text":"<pre><code>git clone https://github.com/lfelipediniz/SocialHubAPI.git\ncd SocialHubAPI\n</code></pre>"},{"location":"quickstart/#2-create-virtual-environment","title":"2. Create Virtual Environment","text":"<pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre>"},{"location":"quickstart/#3-install-dependencies","title":"3. Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"quickstart/#4-configure-environment","title":"4. Configure Environment","text":"<pre><code>cp env.example .env\n</code></pre> <p>Edit <code>.env</code> file: <pre><code># Django Settings\nDJANGO_SECRET_KEY=your-secret-key-here\nDJANGO_DEBUG=True\nDJANGO_ALLOWED_HOSTS=localhost,127.0.0.1\n\n# Database (PostgreSQL for production)\nDATABASE_URL=postgresql://user:password@localhost:5432/socialhubapi\n\n# JWT Settings\nJWT_SECRET_KEY=your-jwt-secret-key-here\n\n# CORS Settings\nDJANGO_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000\n</code></pre></p>"},{"location":"quickstart/#5-run-migrations","title":"5. Run Migrations","text":"<pre><code>python manage.py migrate\n</code></pre>"},{"location":"quickstart/#6-start-server","title":"6. Start Server","text":"<pre><code>python manage.py runserver 0.0.0.0:8000\n</code></pre> <p>API available at <code>http://localhost:8000/</code></p>"},{"location":"quickstart/#quick-examples","title":"Quick Examples","text":""},{"location":"quickstart/#user-registration","title":"User Registration","text":"<pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"securepassword123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  }'\n</code></pre>"},{"location":"quickstart/#user-login","title":"User Login","text":"<pre><code>curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"password\": \"securepassword123\"\n  }'\n</code></pre>"},{"location":"quickstart/#create-post-with-token","title":"Create Post (with token)","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"My First Post\",\n    \"content\": \"Hello, SocialHubAPI!\"\n  }'\n</code></pre>"},{"location":"quickstart/#list-posts","title":"List Posts","text":"<pre><code>curl -X GET \"http://localhost:8000/careers/\"\n</code></pre>"},{"location":"quickstart/#like-a-post","title":"Like a Post","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"\n</code></pre>"},{"location":"quickstart/#add-a-comment","title":"Add a Comment","text":"<pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"Great post!\"}'\n</code></pre>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ol> <li>Explore the API: Check out the API Reference for all available endpoints</li> <li>Authentication: Learn about JWT Authentication </li> <li>Development: See Development Guide for advanced setup</li> </ol>"},{"location":"quickstart/#api-documentation","title":"API Documentation","text":"<ul> <li>Routes Reference - Quick reference of all endpoints</li> <li>Posts API - Complete CRUD operations for posts</li> <li>Users API - User management and authentication</li> <li>Social Features - Likes, comments, shares, and relationships</li> </ul>"},{"location":"api/posts/","title":"Posts API Documentation","text":""},{"location":"api/posts/#overview","title":"Overview","text":"<p>The Posts API provides complete CRUD operations for managing posts in the SocialHub platform. It includes basic post management, social interactions (likes, comments, shares), and follows the CodeLeap careers API contract.</p>"},{"location":"api/posts/#base-url","title":"Base URL","text":"<pre><code>http://localhost:8000/careers/\n</code></pre>"},{"location":"api/posts/#authentication","title":"Authentication","text":"<ul> <li>Authentication: Use <code>Authorization: Bearer &lt;token&gt;</code> header</li> </ul>"},{"location":"api/posts/#endpoints","title":"Endpoints","text":""},{"location":"api/posts/#1-list-posts","title":"1. List Posts","text":"<p>GET <code>/careers/</code></p> <p>Retrieve all posts with pagination support.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of posts per page (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Page number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"count\": 25,\n  \"next\": \"http://localhost:8000/careers/?batch_size=10&amp;batch_number=1\",\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"alice\",\n      \"title\": \"My First Post\",\n      \"content\": \"This is the content of my post\",\n      \"created_datetime\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/posts/#2-create-post","title":"2. Create Post","text":"<p>POST <code>/careers/create/</code></p> <p>Create a new post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"title\": \"My Post Title\",\n    \"content\": \"This is the post content\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li> <p><code>username</code> (required) - The username of the post author</p> </li> <li> <p><code>title</code> (required) - The title of the post (max 200 characters)</p> </li> <li> <p><code>content</code> (required) - The content/body of the post (max 5000 characters)</p> </li> </ul> <p>Character Limits: - Title: Maximum 200 characters - Content: Maximum 5000 characters - Both fields are required and cannot be empty</p> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"title\": \"My Post Title\",\n  \"content\": \"This is the post content\",\n  \"created_datetime\": \"2024\n-01\n-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/posts/#3-retrieve-post","title":"3. Retrieve Post","text":"<p>GET <code>/careers/{id}/</code></p> <p>Get a specific post by ID.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"title\": \"My Post Title\",\n  \"content\": \"This is the post content\",\n  \"created_datetime\": \"2024\n-01\n-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/posts/#4-update-post","title":"4. Update Post","text":"<p>PATCH <code>/careers/{id}/</code></p> <p>Update a post (only title and content can be modified).</p> <p>Request: <pre><code>curl -X PATCH \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Updated Title\",\n    \"content\": \"Updated content\"\n  }'\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to update</li> </ul> <p>Request Body Parameters:</p> <ul> <li> <p><code>title</code> (optional) - New title for the post</p> </li> <li> <p><code>content</code> (optional) - New content for the post</p> </li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"title\": \"Updated Title\",\n  \"content\": \"Updated content\",\n  \"created_datetime\": \"2024\n-01\n-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/posts/#5-delete-post","title":"5. Delete Post","text":"<p>DELETE <code>/careers/{id}/</code></p> <p>Delete a post.</p> <p>Request: <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to delete</li> </ul> <p>Response: <code>204 No Content</code></p>"},{"location":"api/posts/#social-interactions","title":"Social Interactions","text":""},{"location":"api/posts/#likes","title":"Likes","text":""},{"location":"api/posts/#like-a-post","title":"Like a Post","text":"<p>POST <code>/careers/{id}/like/</code></p> <p>Like a specific post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to like</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"message\": \"Post liked successfully\"\n}\n</code></pre></p>"},{"location":"api/posts/#unlike-a-post","title":"Unlike a Post","text":"<p>DELETE <code>/careers/{id}/unlike/</code></p> <p>Remove like from a post.</p> <p>Request: <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/unlike/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to unlike</li> </ul> <p>Response: <code>204 No Content</code></p>"},{"location":"api/posts/#list-post-likes","title":"List Post Likes","text":"<p>GET <code>/careers/{id}/likes/</code></p> <p>Get all likes for a specific post with optional pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of likes per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Likes retrieved successfully\",\n  \"likes\": [\n    {\n      \"id\": 1,\n      \"post\": 1,\n      \"user\": 2,\n      \"username\": \"alice\",\n      \"created_datetime\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_likes\": 15,\n    \"total_batches\": 2,\n    \"likes_in_current_batch\": 10\n  }\n}\n</code></pre></p>"},{"location":"api/posts/#comments","title":"Comments","text":""},{"location":"api/posts/#add-comment","title":"Add Comment","text":"<p>POST <code>/careers/{id}/comment/</code></p> <p>Add a comment to a post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"content\": \"This is a great post!\"\n  }'\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to comment on</li> </ul> <p>Request Body Parameters:</p> <ul> <li><code>content</code> (required) - The comment text content (max 1000 characters)</li> </ul> <p>Character Limits: - Comment content: Maximum 1000 characters - Content is required and cannot be empty</p> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 1,\n  \"user\": \"alice\",\n  \"content\": \"This is a great post!\",\n  \"created_at\": \"2024\n-01\n-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/posts/#list-comments","title":"List Comments","text":"<p>GET <code>/careers/{id}/comments/</code></p> <p>Get all comments for a specific post with optional pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of comments per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Comments retrieved successfully\",\n  \"comments\": [\n    {\n      \"id\": 1,\n      \"post\": 1,\n      \"user\": 2,\n      \"username\": \"alice\",\n      \"content\": \"This is a great post!\",\n      \"created_datetime\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_comments\": 25,\n    \"total_batches\": 3,\n    \"comments_in_current_batch\": 10\n  }\n}\n</code></pre></p>"},{"location":"api/posts/#shares","title":"Shares","text":""},{"location":"api/posts/#share-a-post","title":"Share a Post","text":"<p>POST <code>/careers/{id}/share/</code></p> <p>Share a post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to share</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"message\": \"Post shared successfully\"\n}\n</code></pre></p>"},{"location":"api/posts/#list-shares","title":"List Shares","text":"<p>GET <code>/careers/{id}/shares/</code></p> <p>Get all shares for a specific post with optional pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of shares per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Shares retrieved successfully\",\n  \"shares\": [\n    {\n      \"id\": 1,\n      \"post\": 1,\n      \"user\": 2,\n      \"username\": \"alice\",\n      \"created_datetime\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_shares\": 8,\n    \"total_batches\": 1,\n    \"shares_in_current_batch\": 8\n  }\n}\n</code></pre></p>"},{"location":"api/posts/#create-shared-post","title":"Create Shared Post","text":"<p>POST <code>/careers/{id}/share-post/</code></p> <p>Create a new post that shares another post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Shared Post Title\",\n    \"content\": \"My thoughts on this post\"\n  }'\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the original post to share</li> </ul> <p>Request Body Parameters:</p> <ul> <li> <p><code>title</code> (required) - The title for the new shared post</p> </li> <li> <p><code>content</code> (required) - Your thoughts/comment about the original post</p> </li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 2,\n  \"username\": \"alice\",\n  \"title\": \"Shared Post Title\",\n  \"content\": \"My thoughts on this post\",\n  \"created_datetime\": \"2024\n-01\n-15T10:30:00Z\",\n  \"original_post\": 1,\n  \"post_type\": \"share\"\n}\n</code></pre></p>"},{"location":"api/posts/#error-handling","title":"Error Handling","text":""},{"location":"api/posts/#status-codes","title":"Status Codes","text":"<ul> <li> <p>200 OK - Successful operation</p> </li> <li> <p>201 Created - Resource created successfully</p> </li> <li> <p>204 No Content - Successful operation with no content</p> </li> <li> <p>400 Bad Request - Invalid request data</p> </li> <li> <p>401 Unauthorized - Authentication required</p> </li> <li> <p>403 Forbidden - Insufficient permissions</p> </li> <li> <p>404 Not Found - Resource not found</p> </li> <li> <p>409 Conflict - Resource already exists</p> </li> </ul>"},{"location":"api/posts/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"error\": \"Error message\",\n  \"details\": \"Additional error details\"\n}\n</code></pre>"},{"location":"api/posts/#examples","title":"Examples","text":""},{"location":"api/posts/#create-a-post","title":"Create a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>\"alice\"</code> with your username</p> </li> <li> <p>Replace <code>\"Hello World\"</code> with your post title</p> </li> <li> <p>Replace <code>\"My first post\"</code> with your post content</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: The created post with generated <code>id</code> and <code>created_datetime</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/create/\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"title\": \"Hello World\", \n    \"content\": \"My first post\"\n  }'\n</code></pre></p>"},{"location":"api/posts/#like-a-post_1","title":"Like a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to like</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: <code>{\"message\": \"Post liked successfully\"}</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#add-a-comment","title":"Add a Comment","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to comment on</p> </li> <li> <p>Replace <code>\"Great post!\"</code> with your comment content</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: The created comment with <code>id</code>, <code>user</code>, <code>content</code>, and <code>created_at</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"content\": \"Great post!\"\n  }'\n</code></pre></p>"},{"location":"api/posts/#update-a-post","title":"Update a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to update</p> </li> <li> <p>Replace <code>\"Updated Title\"</code> with your new title (optional)</p> </li> <li> <p>Replace <code>\"Updated content\"</code> with your new content (optional)</p> </li> <li> <p>Note: You can send only <code>title</code> or only <code>content</code> if you want to update just one field</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: The updated post with all fields</p> </li> </ul> <p>Command: <pre><code>curl -X PATCH \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Updated Title\",\n    \"content\": \"Updated content\"\n  }'\n</code></pre></p>"},{"location":"api/posts/#get-comments-with-pagination","title":"Get Comments with Pagination","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>Replace <code>5</code> with desired number of comments per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Comments list with pagination info (<code>batch_info</code>)</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=5&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#get-likes-with-pagination","title":"Get Likes with Pagination","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>Replace <code>10</code> with desired number of likes per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Likes list with pagination info (<code>batch_info</code>)</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#get-shares-with-pagination","title":"Get Shares with Pagination","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>Replace <code>5</code> with desired number of shares per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Shares list with pagination info (<code>batch_info</code>)</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=5&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#delete-a-post","title":"Delete a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to delete</p> </li> <li> <p>Note: You can only delete posts that you created</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>204 No Content</code></p> </li> <li> <p>Response: Empty body (successful deletion)</p> </li> </ul> <p>Command: <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#share-a-post_1","title":"Share a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to share</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: <code>{\"message\": \"Post shared successfully\"}</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#create-shared-post_1","title":"Create Shared Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to share</p> </li> <li> <p>Replace <code>\"Shared Post Title\"</code> with your title for the shared post</p> </li> <li> <p>Replace <code>\"My thoughts on this post\"</code> with your content/comment about the original post</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: The new shared post with <code>original_post</code> and <code>post_type: \"share\"</code> fields</p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Shared Post Title\",\n    \"content\": \"My thoughts on this post\"\n  }'\n</code></pre></p>"},{"location":"api/posts/#get-all-posts-with-optional-pagination","title":"Get All Posts (with optional pagination)","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>For pagination: Replace <code>20</code> with desired posts per page (optional, default: 10)</p> </li> <li> <p>For pagination: Replace <code>1</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Posts list with pagination info (<code>count</code>, <code>next</code>, <code>previous</code>, <code>results</code>)</p> </li> </ul> <p>Command: <pre><code># Basic request\ncurl -X GET \"http://localhost:8000/careers/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n\n# With pagination parameters\ncurl -X GET \"http://localhost:8000/careers/?batch_size=20&amp;batch_number=1\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/posts/#get-single-post","title":"Get Single Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;insert_your_token_here&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to retrieve</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: The complete post object with all fields</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/\" \\\n  -H \"Authorization: Bearer &lt;insert_your_token_here&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/routes/","title":"API Routes Reference","text":"<p>Quick reference of all available API endpoints.</p>"},{"location":"api/routes/#posts-api","title":"Posts API","text":""},{"location":"api/routes/#posts-management","title":"Posts Management","text":"<ul> <li><code>GET /careers/</code> - List all posts</li> <li><code>POST /careers/create/</code> - Create new post</li> <li><code>GET /careers/{id}/</code> - Get specific post</li> <li><code>PATCH /careers/{id}/</code> - Update post</li> <li><code>DELETE /careers/{id}/</code> - Delete post</li> </ul>"},{"location":"api/routes/#social-interactions","title":"Social Interactions","text":"<ul> <li><code>POST /careers/{id}/like/</code> - Like a post</li> <li><code>DELETE /careers/{id}/unlike/</code> - Unlike a post</li> <li><code>GET /careers/{id}/likes/</code> - List post likes</li> <li><code>POST /careers/{id}/comment/</code> - Add comment</li> <li><code>GET /careers/{id}/comments/</code> - List comments</li> <li><code>POST /careers/{id}/share/</code> - Share a post</li> <li><code>GET /careers/{id}/shares/</code> - List shares</li> </ul>"},{"location":"api/routes/#users-api","title":"Users API","text":""},{"location":"api/routes/#authentication","title":"Authentication","text":"<ul> <li><code>POST /users/register/</code> - Register new user</li> <li><code>POST /users/login/</code> - User login</li> <li><code>POST /users/logout/</code> - User logout</li> <li><code>POST /users/token/refresh/</code> - Refresh JWT token</li> </ul>"},{"location":"api/routes/#user-management","title":"User Management","text":"<ul> <li><code>GET /users/</code> - List all users</li> <li><code>GET /users/me/</code> - Get current user profile</li> <li><code>PATCH /users/me/update/</code> - Update current user</li> <li><code>GET /users/me/stats/</code> - Get user statistics</li> <li><code>GET /users/me/feed/</code> - Get personalized feed</li> <li><code>GET /users/{username}/</code> - Get user profile by username</li> </ul>"},{"location":"api/routes/#social-features","title":"Social Features","text":"<ul> <li><code>POST /users/follow/</code> - Follow a user</li> <li><code>GET /users/following/</code> - List following users</li> <li><code>GET /users/{username}/followers/</code> - List user followers</li> <li><code>GET /users/{username}/following/</code> - List users that user follows</li> <li><code>DELETE /users/{username}/unfollow/</code> - Unfollow a user</li> </ul>"},{"location":"api/routes/#query-parameters","title":"Query Parameters","text":""},{"location":"api/routes/#pagination-batch-system","title":"Pagination (Batch System)","text":"<ul> <li><code>batch_size</code> - Number of items per batch</li> <li><code>batch_number</code> - Batch number (starts at 0)</li> </ul>"},{"location":"api/routes/#search-filtering","title":"Search &amp; Filtering","text":"<ul> <li><code>search</code> - General search term</li> <li><code>q</code> - Query parameter for search</li> <li><code>first_name</code> - Filter by first name</li> <li><code>last_name</code> - Filter by last name</li> <li><code>ordering</code> - Sort results</li> <li><code>limit</code> - Limit number of results</li> </ul>"},{"location":"api/routes/#response-format","title":"Response Format","text":""},{"location":"api/routes/#standard-response","title":"Standard Response","text":"<pre><code>{\n  \"message\": \"Success message\",\n  \"data\": [...],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_items\": 25,\n    \"total_batches\": 3,\n    \"items_in_current_batch\": 10\n  }\n}\n</code></pre>"},{"location":"api/routes/#authentication-headers","title":"Authentication Headers","text":"<pre><code>Authorization: Bearer &lt;jwt_token&gt;\n</code></pre>"},{"location":"api/routes/#status-codes","title":"Status Codes","text":"<ul> <li><code>200</code> - Success</li> <li><code>201</code> - Created</li> <li><code>204</code> - No Content</li> <li><code>400</code> - Bad Request</li> <li><code>401</code> - Unauthorized</li> <li><code>403</code> - Forbidden</li> <li><code>404</code> - Not Found</li> <li><code>409</code> - Conflict</li> </ul>"},{"location":"api/social/","title":"Social Features Documentation","text":""},{"location":"api/social/#overview","title":"Overview","text":"<p>The Social Features API provides comprehensive social interaction capabilities including likes, comments, shares, and user relationships. These features enhance user engagement and create a vibrant social platform.</p>"},{"location":"api/social/#base-urls","title":"Base URLs","text":"<ul> <li>Posts Social Features: <code>http://localhost:8000/careers/</code></li> <li>User Social Features: <code>http://localhost:8000/users/</code></li> </ul>"},{"location":"api/social/#authentication","title":"Authentication","text":"<ul> <li>Authentication: Use <code>Authorization: Bearer &lt;token&gt;</code> header</li> </ul>"},{"location":"api/social/#post-interactions","title":"Post Interactions","text":""},{"location":"api/social/#likes-system","title":"Likes System","text":""},{"location":"api/social/#like-a-post","title":"Like a Post","text":"<p>POST <code>/careers/{id}/like/</code></p> <p>Like a specific post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to like</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"message\": \"Post liked successfully\"\n}\n</code></pre></p>"},{"location":"api/social/#unlike-a-post","title":"Unlike a Post","text":"<p>DELETE <code>/careers/{id}/unlike/</code></p> <p>Remove like from a post.</p> <p>Request: <pre><code>curl -X DELETE \"http://localhost:8000/careers/1/unlike/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to unlike</li> </ul> <p>Response: <code>204 No Content</code></p>"},{"location":"api/social/#list-post-likes","title":"List Post Likes","text":"<p>GET <code>/careers/{id}/likes/</code></p> <p>Get all likes for a specific post with pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of likes per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Likes retrieved successfully\",\n  \"likes\": [\n    {\n      \"id\": 1,\n      \"user\": \"alice\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_likes\": 25,\n    \"total_batches\": 3,\n    \"likes_in_current_batch\": 10\n  }\n}\n</code></pre></p>"},{"location":"api/social/#comments-system","title":"Comments System","text":""},{"location":"api/social/#add-comment","title":"Add Comment","text":"<p>POST <code>/careers/{id}/comment/</code></p> <p>Add a comment to a post.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"content\": \"This is a great post! I really enjoyed reading it.\"\n  }'\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to comment on</li> </ul> <p>Request Body Parameters:</p> <ul> <li><code>content</code> (required) - The comment text content</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 1,\n  \"user\": \"alice\",\n  \"content\": \"This is a great post! I really enjoyed reading it.\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/social/#list-comments","title":"List Comments","text":"<p>GET <code>/careers/{id}/comments/</code></p> <p>Get all comments for a specific post with pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of comments per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Comments retrieved successfully\",\n  \"comments\": [\n    {\n      \"id\": 1,\n      \"user\": \"alice\",\n      \"content\": \"This is a great post! I really enjoyed reading it.\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_comments\": 15,\n    \"total_batches\": 2,\n    \"comments_in_current_batch\": 10\n  }\n}\n</code></pre></p>"},{"location":"api/social/#shares-system","title":"Shares System","text":""},{"location":"api/social/#share-a-post","title":"Share a Post","text":"<p>POST <code>/careers/{id}/share/</code></p> <p>Share a post to your network.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post to share</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"message\": \"Post shared successfully\"\n}\n</code></pre></p>"},{"location":"api/social/#list-shares","title":"List Shares","text":"<p>GET <code>/careers/{id}/shares/</code></p> <p>Get all shares for a specific post with pagination.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the post</li> </ul> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of shares per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Shares retrieved successfully\",\n  \"shares\": [\n    {\n      \"id\": 1,\n      \"user\": \"alice\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_shares\": 8,\n    \"total_batches\": 1,\n    \"shares_in_current_batch\": 8\n  }\n}\n</code></pre></p>"},{"location":"api/social/#create-shared-post","title":"Create Shared Post","text":"<p>POST <code>/careers/{id}/share-post/</code></p> <p>Create a new post that shares another post with your own commentary.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"My thoughts on this post\",\n    \"content\": \"I found this post really interesting because...\"\n  }'\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>id</code> (required) - The unique identifier of the original post to share</li> </ul> <p>Request Body Parameters:</p> <ul> <li> <p><code>title</code> (required) - The title for the new shared post</p> </li> <li> <p><code>content</code> (required) - Your thoughts/commentary about the original post</p> </li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 2,\n  \"username\": \"alice\",\n  \"title\": \"My thoughts on this post\",\n  \"content\": \"I found this post really interesting because...\",\n  \"created_datetime\": \"2024-01-15T10:30:00Z\",\n  \"original_post\": 1,\n  \"post_type\": \"share\"\n}\n</code></pre></p>"},{"location":"api/social/#user-relationships","title":"User Relationships","text":""},{"location":"api/social/#following-system","title":"Following System","text":""},{"location":"api/social/#follow-user","title":"Follow User","text":"<p>POST <code>/users/follow/</code></p> <p>Follow another user to see their posts in your feed.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/follow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"following\": 2\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li><code>following</code> (required) - ID of the user to follow</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 1,\n  \"follower\": 1,\n  \"following\": 2,\n  \"follower_username\": \"alice\",\n  \"following_username\": \"bob\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/social/#unfollow-user","title":"Unfollow User","text":"<p>DELETE <code>/users/{username}/unfollow/</code></p> <p>Stop following a user.</p> <p>Request: <pre><code>curl -X DELETE \"http://localhost:8000/users/bob/unfollow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user to unfollow</li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"message\": \"Stopped following bob\"\n}\n</code></pre></p>"},{"location":"api/social/#get-following-list","title":"Get Following List","text":"<p>GET <code>/users/following/</code></p> <p>Get list of users that the current user follows.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"count\": 5,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"follower\": 1,\n      \"following\": 2,\n      \"follower_username\": \"alice\",\n      \"following_username\": \"bob\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/social/#get-users-followers","title":"Get User's Followers","text":"<p>GET <code>/users/{username}/followers/</code></p> <p>Get list of followers for a specific user.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/alice/followers/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user whose followers to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"count\": 10,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"charlie\",\n      \"first_name\": \"Charlie\",\n      \"last_name\": \"Brown\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/social/#get-users-following","title":"Get User's Following","text":"<p>GET <code>/users/{username}/following/</code></p> <p>Get list of users that a specific user follows.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/alice/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user whose following list to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"count\": 8,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"david\",\n      \"first_name\": \"David\",\n      \"last_name\": \"Wilson\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": true\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/social/#feed-system","title":"Feed System","text":""},{"location":"api/social/#personalized-feed","title":"Personalized Feed","text":"<p>GET <code>/users/me/feed/</code></p> <p>Get personalized feed with posts from users you follow, plus your own posts. Uses the same batch system as other endpoints for consistency.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/me/feed/?batch_size=20&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Query Parameters:</p> <ul> <li> <p><code>batch_size</code> (optional) - Number of posts per batch (default: 20, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Feed retrieved successfully\",\n  \"posts\": [\n    {\n      \"id\": 1,\n      \"username\": \"bob\",\n      \"title\": \"New Post from Bob\",\n      \"content\": \"This is a post from someone I follow\",\n      \"created_datetime\": \"2024-01-15T10:30:00Z\"\n    },\n    {\n      \"id\": 2,\n      \"username\": \"alice\",\n      \"title\": \"My Own Post\",\n      \"content\": \"This is my own post\",\n      \"created_datetime\": \"2024-01-15T09:30:00Z\"\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 20,\n    \"total_posts\": 50,\n    \"total_batches\": 3,\n    \"posts_in_current_batch\": 20\n  }\n}\n</code></pre></p>"},{"location":"api/social/#user-statistics","title":"User Statistics","text":""},{"location":"api/social/#get-user-stats","title":"Get User Stats","text":"<p>GET <code>/users/me/stats/</code></p> <p>Get comprehensive statistics for the current user.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/me/stats/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28,\n  \"likes_received\": 156,\n  \"comments_received\": 89\n}\n</code></pre></p>"},{"location":"api/social/#error-handling","title":"Error Handling","text":""},{"location":"api/social/#status-codes","title":"Status Codes","text":"<ul> <li> <p>200 OK - Successful operation</p> </li> <li> <p>201 Created - Resource created successfully</p> </li> <li> <p>204 No Content - Successful operation with no content</p> </li> <li> <p>400 Bad Request - Invalid request data</p> </li> <li> <p>401 Unauthorized - Authentication required</p> </li> <li> <p>403 Forbidden - Insufficient permissions</p> </li> <li> <p>404 Not Found - Resource not found</p> </li> <li> <p>409 Conflict - Resource already exists (e.g., already following)</p> </li> </ul>"},{"location":"api/social/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"error\": \"Error message\",\n  \"details\": \"Additional error details\"\n}\n</code></pre>"},{"location":"api/social/#examples","title":"Examples","text":""},{"location":"api/social/#like-a-post_1","title":"Like a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to like</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: <code>{\"message\": \"Post liked successfully\"}</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/like/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#add-a-comment","title":"Add a Comment","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to comment on</p> </li> <li> <p>Replace <code>\"Great post!\"</code> with your comment content</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: The created comment with <code>id</code>, <code>user</code>, <code>content</code>, and <code>created_at</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/comment/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"Great post!\"}'\n</code></pre></p>"},{"location":"api/social/#share-a-post_1","title":"Share a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to share</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: <code>{\"message\": \"Post shared successfully\"}</code></p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#follow-a-user","title":"Follow a User","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>2</code> with the ID of the user you want to follow</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: Follow relationship object with follower and following details</p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/users/follow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"following\": 2}'\n</code></pre></p>"},{"location":"api/social/#get-personalized-feed","title":"Get Personalized Feed","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>For pagination: Replace <code>20</code> with desired posts per page (optional, default: 20)</p> </li> <li> <p>For pagination: Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Posts list with pagination info from users you follow (uses batch system)</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/me/feed/?batch_size=20&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#get-user-statistics","title":"Get User Statistics","text":"<p>What to send:</p> <ul> <li>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: User statistics including posts, followers, following, likes, and comments counts</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/me/stats/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#create-shared-post-with-commentary","title":"Create Shared Post with Commentary","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID you want to share</p> </li> <li> <p>Replace <code>\"My thoughts on this\"</code> with your title for the shared post</p> </li> <li> <p>Replace <code>\"I found this post really insightful because...\"</code> with your commentary</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: The new shared post with <code>original_post</code> and <code>post_type: \"share\"</code> fields</p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/careers/1/share-post/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"My thoughts on this\",\n    \"content\": \"I found this post really insightful because...\"\n  }'\n</code></pre></p>"},{"location":"api/social/#get-all-likes-for-a-post","title":"Get All Likes for a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>For pagination: Replace <code>10</code> with desired likes per page (optional, default: 10)</p> </li> <li> <p>For pagination: Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Likes list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/likes/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#get-all-comments-for-a-post","title":"Get All Comments for a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>For pagination: Replace <code>10</code> with desired comments per page (optional, default: 10)</p> </li> <li> <p>For pagination: Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Comments list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/comments/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/social/#get-all-shares-for-a-post","title":"Get All Shares for a Post","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>&lt;your_token&gt;</code> with your actual authentication token</p> </li> <li> <p>Replace <code>1</code> in the URL with the post ID</p> </li> <li> <p>For pagination: Replace <code>10</code> with desired shares per page (optional, default: 10)</p> </li> <li> <p>For pagination: Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Shares list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/careers/1/shares/?batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/users/","title":"Users API Documentation","text":""},{"location":"api/users/#overview","title":"Overview","text":"<p>The Users API provides comprehensive user management functionality including registration, authentication, profile management, and social features like following/followers system.</p>"},{"location":"api/users/#base-url","title":"Base URL","text":"<pre><code>http://localhost:8000/users/\n</code></pre>"},{"location":"api/users/#authentication-modes","title":"Authentication Modes","text":""},{"location":"api/users/#jwt-authentication","title":"JWT Authentication","text":"<ul> <li>Secure token-based authentication</li> <li>Use <code>Authorization: Bearer &lt;token&gt;</code> header</li> <li>Tokens expire after 60 minutes</li> <li>Refresh tokens available for 7 days</li> </ul>"},{"location":"api/users/#endpoints","title":"Endpoints","text":""},{"location":"api/users/#authentication","title":"Authentication","text":""},{"location":"api/users/#register-user","title":"Register User","text":"<p>POST <code>/users/register/</code></p> <p>Register a new user account.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"password123\",\n    \"password_confirm\": \"password123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"bio\": \"Software developer passionate about APIs\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li> <p><code>username</code> (required) - Unique username for the account</p> </li> <li> <p><code>email</code> (required) - Valid email address</p> </li> <li> <p><code>password</code> (required) - Account password</p> </li> <li> <p><code>password_confirm</code> (required) - Password confirmation (must match password)</p> </li> <li> <p><code>first_name</code> (optional) - User's first name</p> </li> <li> <p><code>last_name</code> (optional) - User's last name</p> </li> <li> <p><code>bio</code> (optional) - User's biography/description</p> </li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"bio\": \"Software developer passionate about APIs\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n</code></pre></p>"},{"location":"api/users/#login","title":"Login","text":"<p>POST <code>/users/login/</code></p> <p>Authenticate user and get access tokens.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"password\": \"password123\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li> <p><code>username</code> (required) - Username or email for authentication</p> </li> <li> <p><code>password</code> (required) - User's password</p> </li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  },\n  \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n</code></pre></p>"},{"location":"api/users/#refresh-token","title":"Refresh Token","text":"<p>POST <code>/users/token/refresh/</code></p> <p>Get new access token using refresh token.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/token/refresh/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li><code>refresh</code> (required) - Valid refresh token</li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n</code></pre></p>"},{"location":"api/users/#logout","title":"Logout","text":"<p>POST <code>/users/logout/</code></p> <p>Logout user and blacklist refresh token.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/logout/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li><code>refresh</code> (required) - Valid refresh token to blacklist</li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"message\": \"Successfully logged out\"\n}\n</code></pre></p>"},{"location":"api/users/#user-management","title":"User Management","text":""},{"location":"api/users/#list-users","title":"List Users","text":"<p>GET <code>/users/</code></p> <p>Get paginated list of all users with search and filtering using batch system.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/?search=alice&amp;batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Query Parameters:</p> <ul> <li> <p><code>search</code> (optional) - Search in username, first_name, last_name, bio</p> </li> <li> <p><code>first_name</code> (optional) - Filter by first name (contains)</p> </li> <li> <p><code>last_name</code> (optional) - Filter by last name (contains)</p> </li> <li> <p><code>ordering</code> (optional) - Sort by: username, created_at, first_name, last_name</p> </li> <li> <p><code>batch_size</code> (optional) - Number of users per batch (default: 10, max: 100)</p> </li> <li> <p><code>batch_number</code> (optional) - Batch number starting from 0 (default: 0)</p> </li> </ul> <p>Response: <pre><code>{\n  \"message\": \"Users retrieved successfully\",\n  \"users\": [\n    {\n      \"id\": 1,\n      \"username\": \"alice\",\n      \"first_name\": \"Alice\",\n      \"last_name\": \"Smith\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ],\n  \"batch_info\": {\n    \"current_batch\": 0,\n    \"batch_size\": 10,\n    \"total_users\": 25,\n    \"total_batches\": 3,\n    \"users_in_current_batch\": 10\n  }\n}\n</code></pre></p>"},{"location":"api/users/#get-user-profile","title":"Get User Profile","text":"<p>GET <code>/users/{username}/</code></p> <p>Get public profile information for a specific user.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/alice/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"bio\": \"Software developer passionate about APIs\",\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28\n}\n</code></pre></p>"},{"location":"api/users/#get-my-profile","title":"Get My Profile","text":"<p>GET <code>/users/me/</code></p> <p>Get current user's detailed profile information.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/me/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"email\": \"alice@example.com\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Smith\",\n  \"bio\": \"Software developer passionate about APIs\",\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"updated_at\": \"2024-01-15T10:30:00Z\",\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28\n}\n</code></pre></p>"},{"location":"api/users/#update-my-profile","title":"Update My Profile","text":"<p>PATCH <code>/users/me/update/</code></p> <p>Update current user's profile information.</p> <p>Request: <pre><code>curl -X PATCH \"http://localhost:8000/users/me/update/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Johnson\",\n    \"bio\": \"Updated bio\",\n    \"avatar\": \"https://example.com/new-avatar.jpg\",\n    \"email\": \"alice.johnson@example.com\"\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li> <p><code>first_name</code> (optional) - User's first name</p> </li> <li> <p><code>last_name</code> (optional) - User's last name</p> </li> <li> <p><code>bio</code> (optional) - User's biography/description</p> </li> <li> <p><code>avatar</code> (optional) - URL to user's avatar image</p> </li> <li> <p><code>email</code> (optional) - User's email address</p> </li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"id\": 1,\n  \"username\": \"alice\",\n  \"email\": \"alice.johnson@example.com\",\n  \"first_name\": \"Alice\",\n  \"last_name\": \"Johnson\",\n  \"bio\": \"Updated bio\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\",\n  \"updated_at\": \"2024-01-15T11:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/users/#social-features","title":"Social Features","text":""},{"location":"api/users/#follow-user","title":"Follow User","text":"<p>POST <code>/users/follow/</code></p> <p>Follow another user.</p> <p>Request: <pre><code>curl -X POST \"http://localhost:8000/users/follow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"following\": 2\n  }'\n</code></pre></p> <p>Request Body Parameters:</p> <ul> <li><code>following</code> (required) - ID of the user to follow</li> </ul> <p>Response: <code>201 Created</code> <pre><code>{\n  \"id\": 1,\n  \"follower\": 1,\n  \"following\": 2,\n  \"follower_username\": \"alice\",\n  \"following_username\": \"bob\",\n  \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"api/users/#unfollow-user","title":"Unfollow User","text":"<p>DELETE <code>/users/{username}/unfollow/</code></p> <p>Stop following a user.</p> <p>Request: <pre><code>curl -X DELETE \"http://localhost:8000/users/bob/unfollow/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user to unfollow</li> </ul> <p>Response: <code>200 OK</code> <pre><code>{\n  \"message\": \"Stopped following bob\"\n}\n</code></pre></p>"},{"location":"api/users/#get-following-list","title":"Get Following List","text":"<p>GET <code>/users/following/</code></p> <p>Get list of users that the current user follows.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"count\": 5,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"follower\": 1,\n      \"following\": 2,\n      \"follower_username\": \"alice\",\n      \"following_username\": \"bob\",\n      \"created_at\": \"2024-01-15T10:30:00Z\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/users/#get-users-followers","title":"Get User's Followers","text":"<p>GET <code>/users/{username}/followers/</code></p> <p>Get list of followers for a specific user.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/alice/followers/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user whose followers to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"count\": 10,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"charlie\",\n      \"first_name\": \"Charlie\",\n      \"last_name\": \"Brown\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": false\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/users/#get-users-following","title":"Get User's Following","text":"<p>GET <code>/users/{username}/following/</code></p> <p>Get list of users that a specific user follows.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/alice/following/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>URL Parameters:</p> <ul> <li><code>username</code> (required) - The username of the user whose following list to retrieve</li> </ul> <p>Response: <pre><code>{\n  \"count\": 8,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"david\",\n      \"first_name\": \"David\",\n      \"last_name\": \"Wilson\",\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"is_following\": true\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/users/#user-statistics-and-feed","title":"User Statistics and Feed","text":""},{"location":"api/users/#get-my-statistics","title":"Get My Statistics","text":"<p>GET <code>/users/me/stats/</code></p> <p>Get current user's statistics.</p> <p>Request: <pre><code>curl -X GET \"http://localhost:8000/users/me/stats/\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"posts_count\": 15,\n  \"followers_count\": 42,\n  \"following_count\": 28,\n  \"likes_received\": 156,\n  \"comments_received\": 89\n}\n</code></pre></p>"},{"location":"api/users/#feed-functionality","title":"Feed Functionality","text":"<p>Note: The personalized feed functionality (posts from followed users + your own posts) is available through the main posts API:</p> <ul> <li><code>GET /careers/</code> - Get all posts (use frontend filtering to show only followed users)</li> <li><code>GET /users/me/stats/</code> - Get your following/followers information</li> <li><code>GET /users/&lt;username&gt;/followers/</code> - Get list of followers</li> <li><code>GET /users/&lt;username&gt;/following/</code> - Get list of following</li> </ul> <p>This approach is more efficient and avoids route duplication.</p>"},{"location":"api/users/#error-handling","title":"Error Handling","text":""},{"location":"api/users/#status-codes","title":"Status Codes","text":"<ul> <li> <p>200 OK - Successful operation</p> </li> <li> <p>201 Created - Resource created successfully</p> </li> <li> <p>204 No Content - Successful operation with no content</p> </li> <li> <p>400 Bad Request - Invalid request data</p> </li> <li> <p>401 Unauthorized - Authentication required</p> </li> <li> <p>403 Forbidden - Insufficient permissions</p> </li> <li> <p>404 Not Found - Resource not found</p> </li> <li> <p>409 Conflict - Resource already exists</p> </li> </ul>"},{"location":"api/users/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"error\": \"Error message\",\n  \"details\": \"Additional error details\"\n}\n</code></pre>"},{"location":"api/users/#examples","title":"Examples","text":""},{"location":"api/users/#register-new-user","title":"Register New User","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>\"alice\"</code> with your desired username</p> </li> <li> <p>Replace <code>\"alice@example.com\"</code> with your email address</p> </li> <li> <p>Replace <code>\"password123\"</code> with your password (use it twice for password_confirm)</p> </li> <li> <p>Replace <code>\"Alice\"</code> and <code>\"Smith\"</code> with your first and last name</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: User object with access and refresh tokens</p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"password123\",\n    \"password_confirm\": \"password123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  }'\n</code></pre></p>"},{"location":"api/users/#login-and-get-token","title":"Login and Get Token","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>\"alice\"</code> with your username</p> </li> <li> <p>Replace <code>\"password123\"</code> with your password</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: User object with access and refresh tokens</p> </li> </ul> <p>Command: <pre><code>TOKEN=$(curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"alice\", \"password\": \"password123\"}' | jq -r '.access')\n</code></pre></p>"},{"location":"api/users/#update-profile","title":"Update Profile","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>$TOKEN</code> with your actual access token</p> </li> <li> <p>Replace <code>\"Software developer passionate about APIs\"</code> with your bio</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Updated user profile</p> </li> </ul> <p>Command: <pre><code>curl -X PATCH \"http://localhost:8000/users/me/update/\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"bio\": \"Software developer passionate about APIs\"}'\n</code></pre></p>"},{"location":"api/users/#follow-another-user","title":"Follow Another User","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>$TOKEN</code> with your actual access token</p> </li> <li> <p>Replace <code>2</code> with the ID of the user you want to follow</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>201 Created</code></p> </li> <li> <p>Response: Follow relationship object</p> </li> </ul> <p>Command: <pre><code>curl -X POST \"http://localhost:8000/users/follow/\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"following\": 2}'\n</code></pre></p>"},{"location":"api/users/#list-users-with-pagination","title":"List Users with Pagination","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>5</code> with desired number of users per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Users list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/?batch_size=5&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/users/#search-users","title":"Search Users","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>\"alice\"</code> with your search term</p> </li> <li> <p>Replace <code>10</code> with desired number of users per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Filtered users list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/?search=alice&amp;batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/users/#filter-users-by-name","title":"Filter Users by Name","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>\"Alice\"</code> with the first name to filter by</p> </li> <li> <p>Replace <code>\"Smith\"</code> with the last name to filter by</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Filtered users list</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/?first_name=Alice&amp;last_name=Smith\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"api/users/#list-users-with-custom-ordering","title":"List Users with Custom Ordering","text":"<p>What to send:</p> <ul> <li> <p>Replace <code>\"created_at\"</code> with desired ordering field (username, created_at, first_name, last_name)</p> </li> <li> <p>Replace <code>10</code> with desired number of users per page (optional, default: 10)</p> </li> <li> <p>Replace <code>0</code> with the page number you want (optional, default: 0)</p> </li> </ul> <p>What you'll receive:</p> <ul> <li> <p>Status: <code>200 OK</code></p> </li> <li> <p>Response: Sorted users list with pagination info</p> </li> </ul> <p>Command: <pre><code>curl -X GET \"http://localhost:8000/users/?ordering=created_at&amp;batch_size=10&amp;batch_number=0\" \\\n  -H \"Authorization: Bearer &lt;your_token&gt;\" \\\n  -H \"Content-Type: application/json\"\n</code></pre></p>"},{"location":"auth/","title":"Authentication System Documentation","text":""},{"location":"auth/#overview","title":"Overview","text":"<p>The SocialHub API uses JWT (JSON Web Token) authentication for secure access to all endpoints.</p>"},{"location":"auth/#authentication-system","title":"Authentication System","text":""},{"location":"auth/#jwt-authentication","title":"JWT Authentication","text":"<ul> <li>Purpose: Secure token-based authentication</li> <li>Method: JWT (JSON Web Token) authentication</li> <li>Header: <code>Authorization: Bearer &lt;access_token&gt;</code></li> <li>Token Lifetime: Access tokens expire after 60 minutes</li> <li>Refresh Tokens: Available for 7 days</li> </ul>"},{"location":"auth/#configuration","title":"Configuration","text":""},{"location":"auth/#environment-variables","title":"Environment Variables","text":"<p>Configure JWT settings using environment variables:</p> <pre><code># JWT Settings\nJWT_SECRET_KEY=your-jwt-secret-key-here\n</code></pre>"},{"location":"auth/#settings-configuration","title":"Settings Configuration","text":"<p>JWT configuration is set in <code>settings.py</code>:</p> <pre><code># JWT Configuration\nfrom datetime import timedelta\n\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': config('JWT_SECRET_KEY', default=SECRET_KEY),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',\n    'USER_ID_FIELD': 'id',\n    'USER_ID_CLAIM': 'user_id',\n}\n</code></pre>"},{"location":"auth/#authentication-workflow","title":"Authentication Workflow","text":""},{"location":"auth/#1-user-registration","title":"1. User Registration","text":"<pre><code>curl -X POST \"http://localhost:8000/users/register/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"password\": \"securepassword123\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n  \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#2-user-login","title":"2. User Login","text":"<pre><code>curl -X POST \"http://localhost:8000/users/login/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"alice\",\n    \"password\": \"securepassword123\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"alice\",\n    \"email\": \"alice@example.com\",\n    \"first_name\": \"Alice\",\n    \"last_name\": \"Smith\",\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n  },\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n  \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#3-using-access-tokens","title":"3. Using Access Tokens","text":"<p>Include the access token in the Authorization header for protected endpoints:</p> <pre><code>curl -X GET \"http://localhost:8000/users/me/\" \\\n  -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n</code></pre>"},{"location":"auth/#4-token-refresh","title":"4. Token Refresh","text":"<p>When the access token expires, use the refresh token to get a new one:</p> <pre><code>curl -X POST \"http://localhost:8000/users/token/refresh/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}\n</code></pre></p>"},{"location":"auth/#5-user-logout","title":"5. User Logout","text":"<p>To logout, blacklist the refresh token:</p> <pre><code>curl -X POST \"http://localhost:8000/users/logout/\" \\\n  -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }'\n</code></pre> <p>Response: <pre><code>{\n  \"message\": \"successfully logged out\"\n}\n</code></pre></p>"},{"location":"auth/#protected-endpoints","title":"Protected Endpoints","text":"<p>All endpoints except the following require authentication: - <code>POST /users/register/</code> - User registration - <code>POST /users/login/</code> - User login - <code>POST /users/token/refresh/</code> - Token refresh</p>"},{"location":"auth/#error-responses","title":"Error Responses","text":""},{"location":"auth/#401-unauthorized","title":"401 Unauthorized","text":"<pre><code>{\n  \"detail\": \"Authentication credentials were not provided.\"\n}\n</code></pre>"},{"location":"auth/#403-forbidden","title":"403 Forbidden","text":"<pre><code>{\n  \"message\": \"Access denied - You can only edit your own posts\"\n}\n</code></pre>"},{"location":"auth/#invalid-token","title":"Invalid Token","text":"<pre><code>{\n  \"detail\": \"Given token not valid for any token type\"\n}\n</code></pre>"},{"location":"auth/#security-features","title":"Security Features","text":"<ul> <li>Token Rotation: Refresh tokens are rotated on each use</li> <li>Token Blacklisting: Logged out tokens are blacklisted</li> <li>Secure Headers: Tokens must be sent in Authorization header</li> <li>HTTPS Recommended: Use HTTPS in production for secure token transmission</li> </ul>"}]}